// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NOCIL_VP.Domain.Core.Entities;

#nullable disable

namespace NOCIL_VP.Domain.Core.Migrations
{
    [DbContext(typeof(VpContext))]
    [Migration("20240314120154_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Approval.FormProcess", b =>
                {
                    b.Property<int>("Process_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Process_Id"));

                    b.Property<DateTime?>("Completed_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("Created_By")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.HasKey("Process_Id");

                    b.HasIndex("Created_By");

                    b.HasIndex("Form_Id");

                    b.ToTable("Processes");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Approval.Tasks", b =>
                {
                    b.Property<long>("Task_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Task_Id"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Task_Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Approval.WorkFlow", b =>
                {
                    b.Property<int>("WorkFlow_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkFlow_Id"));

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Role_Id")
                        .HasColumnType("int");

                    b.Property<int>("Vendor_Type_Id")
                        .HasColumnType("int");

                    b.HasKey("WorkFlow_Id");

                    b.HasIndex("Role_Id");

                    b.HasIndex("Vendor_Type_Id");

                    b.ToTable("WorkFlows");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Logs.TransactionHistory", b =>
                {
                    b.Property<long>("Log_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Log_Id"));

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Logged_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Log_Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("TransactionHistories");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Mappings.User_Role_Mapping", b =>
                {
                    b.Property<string>("Employee_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Role_Id")
                        .HasColumnType("int");

                    b.HasKey("Employee_Id", "Role_Id");

                    b.ToTable("User_Role_Mappings");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.AddressType", b =>
                {
                    b.Property<int>("Address_Type_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Address_Type_Id"));

                    b.Property<string>("Address_Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Address_Type_Id");

                    b.ToTable("Type_of_Addresses");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.CompanyCode", b =>
                {
                    b.Property<string>("Company_Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Company_Code");

                    b.ToTable("Company_Codes");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.CompanyStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Company_Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Company_Statuses");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.ContactType", b =>
                {
                    b.Property<int>("Contact_Type_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Contact_Type_Id"));

                    b.Property<string>("Contact_Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Contact_Type_Id");

                    b.ToTable("Type_of_Contacts");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.Department", b =>
                {
                    b.Property<int>("Department_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Department_Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Department_Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.FormStatus", b =>
                {
                    b.Property<int>("Status_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Status_Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Status_Id");

                    b.ToTable("Form_Statuses");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.OrganizationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type_of_Organization")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Organization_Types");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.PurchaseOrganization", b =>
                {
                    b.Property<string>("PO_Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PO_Code");

                    b.ToTable("Purchase_Organizations");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.Role", b =>
                {
                    b.Property<int>("Role_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Role_Id"));

                    b.Property<string>("Role_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Role_Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.TankerType", b =>
                {
                    b.Property<int>("Tanker_Type_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Tanker_Type_Id"));

                    b.Property<string>("Tanker_Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Tanker_Type_Id");

                    b.ToTable("Type_of_Tankers");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.User", b =>
                {
                    b.Property<string>("Employee_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<string>("Last_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Middle_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile_No")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reporting_Manager_EmpId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Employee_Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.VendorType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Vendor_Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Type_of_Vendors");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Attachments.Attachment", b =>
                {
                    b.Property<int>("Attachment_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Attachment_Id"));

                    b.Property<DateTime?>("Expiry_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("File_Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("File_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("File_Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("File_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Is_Expiry_Available")
                        .HasColumnType("bit");

                    b.HasKey("Attachment_Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("Attchments");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.Address", b =>
                {
                    b.Property<int>("Address_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Address_Id"));

                    b.Property<string>("AddressData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Address_Type_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Contact_Type_Id")
                        .HasColumnType("int");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Website")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Address_Id");

                    b.HasIndex("Contact_Type_Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.AnnualTurnOver", b =>
                {
                    b.Property<int>("TurnOver_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TurnOver_Id"));

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<long>("NetProfit")
                        .HasColumnType("bigint");

                    b.Property<long>("OperatingProfit")
                        .HasColumnType("bigint");

                    b.Property<long>("SalesTurnOver")
                        .HasColumnType("bigint");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("TurnOver_Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("Annual_TurnOver");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.Bank_Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountHolder")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Account_Number")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bank")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Branch")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<string>("IBAN")
                        .HasMaxLength(34)
                        .HasColumnType("nvarchar(34)");

                    b.Property<string>("IFSC")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("SWIFT")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("Bank_Details");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.CommercialProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Agency_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Financial_Credit_Rating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<string>("GSTIN")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("MSME_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MSME_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAN")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ServiceCategory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("Commercial_Profile");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.Contact", b =>
                {
                    b.Property<int>("Contact_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Contact_Id"));

                    b.Property<int>("Contact_Type_Id")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<string>("Mobile_Number")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_Number")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Contact_Id");

                    b.HasIndex("Contact_Type_Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.ProprietorOrPartner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PercentageShare")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("Proprietor_or_Partners");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.TechnicalProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<string>("Initiatives_for_Development")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_ISO_Cerified")
                        .HasColumnType("bit");

                    b.Property<bool>("Is_Statutory_Provisions_Adheard")
                        .HasColumnType("bit");

                    b.Property<bool>("Other_Qms_Certified")
                        .HasColumnType("bit");

                    b.Property<bool>("Planning_for_Qms")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("Technical_Profile");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.VendorBranch", b =>
                {
                    b.Property<int>("Branch_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Branch_Id"));

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile_No")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Branch_Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("VendorBranches");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Domestic.DomesticVendorPersonalData", b =>
                {
                    b.Property<int>("Domestic_Personal_Info_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Domestic_Personal_Info_Id"));

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<string>("Organization_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Plant_Installation_Year")
                        .HasColumnType("int");

                    b.HasKey("Domestic_Personal_Info_Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("Domestic_Vendor_Personal_Data");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Domestic.VendorOrganizationProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<int>("Status_of_Company_Id")
                        .HasColumnType("int");

                    b.Property<int>("Type_of_Org_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Form_Id");

                    b.HasIndex("Status_of_Company_Id");

                    b.HasIndex("Type_of_Org_Id");

                    b.ToTable("Domestic_Organization_Profile");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Form", b =>
                {
                    b.Property<int>("Form_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Form_Id"));

                    b.Property<string>("Company_Code")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Created_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("Department_Id")
                        .HasColumnType("int");

                    b.Property<string>("Purchase_Organization")
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Status_Id")
                        .HasColumnType("int");

                    b.Property<string>("Vendor_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor_Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor_Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vendor_Type_Id")
                        .HasColumnType("int");

                    b.HasKey("Form_Id");

                    b.HasIndex("Company_Code");

                    b.HasIndex("Department_Id");

                    b.HasIndex("Purchase_Organization");

                    b.HasIndex("Status_Id");

                    b.HasIndex("Vendor_Type_Id");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Transport.TankerDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Capacity_of_Tanker")
                        .HasColumnType("real");

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<int>("Tanker_Type_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Form_Id");

                    b.HasIndex("Tanker_Type_Id");

                    b.ToTable("Tanker_Details");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Transport.TransportVendorPersonalData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date_of_Establishment")
                        .HasColumnType("datetime2");

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name_of_Transporter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Nicerglobe_Registration_Status")
                        .HasColumnType("bit");

                    b.Property<int>("No_of_Drivers")
                        .HasColumnType("int");

                    b.Property<int>("No_of_Own_Vehicles")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("Transport_Vendor_Personal_Data");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Approval.FormProcess", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.User", "Users")
                        .WithMany()
                        .HasForeignKey("Created_By");

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Approval.Tasks", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Approval.WorkFlow", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.Role", "Roles")
                        .WithMany()
                        .HasForeignKey("Role_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.VendorType", "VendorTypes")
                        .WithMany()
                        .HasForeignKey("Vendor_Type_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");

                    b.Navigation("VendorTypes");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Logs.TransactionHistory", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Attachments.Attachment", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.Address", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.AddressType", "AddressTypes")
                        .WithMany()
                        .HasForeignKey("Contact_Type_Id");

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddressTypes");

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.AnnualTurnOver", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.Bank_Detail", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.CommercialProfile", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.Contact", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.ContactType", "ContactTypes")
                        .WithMany()
                        .HasForeignKey("Contact_Type_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContactTypes");

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.ProprietorOrPartner", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.TechnicalProfile", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.VendorBranch", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Domestic.DomesticVendorPersonalData", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Domestic.VendorOrganizationProfile", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.CompanyStatus", "CompanyStatus")
                        .WithMany()
                        .HasForeignKey("Status_of_Company_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.OrganizationType", "OrganizationTypes")
                        .WithMany()
                        .HasForeignKey("Type_of_Org_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyStatus");

                    b.Navigation("Forms");

                    b.Navigation("OrganizationTypes");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Form", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.CompanyCode", "CompanyCode")
                        .WithMany()
                        .HasForeignKey("Company_Code");

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.Department", "DepartmentVirtual")
                        .WithMany()
                        .HasForeignKey("Department_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.PurchaseOrganization", "PurchaseOrganization")
                        .WithMany()
                        .HasForeignKey("Purchase_Organization");

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.FormStatus", "FormStatus")
                        .WithMany()
                        .HasForeignKey("Status_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.VendorType", "VendorType")
                        .WithMany()
                        .HasForeignKey("Vendor_Type_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyCode");

                    b.Navigation("DepartmentVirtual");

                    b.Navigation("FormStatus");

                    b.Navigation("PurchaseOrganization");

                    b.Navigation("VendorType");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Transport.TankerDetail", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.TankerType", "TankerTypes")
                        .WithMany()
                        .HasForeignKey("Tanker_Type_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");

                    b.Navigation("TankerTypes");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Transport.TransportVendorPersonalData", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });
#pragma warning restore 612, 618
        }
    }
}
