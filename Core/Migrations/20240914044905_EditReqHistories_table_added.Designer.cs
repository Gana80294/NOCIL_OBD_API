// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NOCIL_VP.Domain.Core.Entities;

#nullable disable

namespace NOCIL_VP.Domain.Core.Migrations
{
    [DbContext(typeof(VpContext))]
    [Migration("20240914044905_EditReqHistories_table_added")]
    partial class EditReqHistories_table_added
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Approval.Tasks", b =>
                {
                    b.Property<long>("Task_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Task_Id"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner_Id")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Role_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Task_Id");

                    b.HasIndex("Form_Id");

                    b.HasIndex("Owner_Id");

                    b.HasIndex("Role_Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Approval.WorkFlow", b =>
                {
                    b.Property<int>("WorkFlow_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkFlow_Id"));

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Role_Id")
                        .HasColumnType("int");

                    b.Property<int>("Vendor_Type_Id")
                        .HasColumnType("int");

                    b.HasKey("WorkFlow_Id");

                    b.HasIndex("Role_Id");

                    b.HasIndex("Vendor_Type_Id");

                    b.ToTable("WorkFlows");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Auth.ForgotPasswordOtpTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Employee_Id")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Requested_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("TxId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Validated_On")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Employee_Id");

                    b.ToTable("ForgotPasswordOtpTransactions");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Auth.OtpTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Requested_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("TxId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Validated_On")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("OtpTransactions");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Logs.EditRequestHistory", b =>
                {
                    b.Property<long>("Log_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Log_Id"));

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Log_Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("EditRequestHistories");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Logs.TransactionHistory", b =>
                {
                    b.Property<long>("Log_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Log_Id"));

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Logged_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Log_Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("TransactionHistories");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Mappings.User_Role_Mapping", b =>
                {
                    b.Property<string>("Employee_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Role_Id")
                        .HasColumnType("int");

                    b.HasKey("Employee_Id", "Role_Id");

                    b.ToTable("User_Role_Mappings");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.AddressType", b =>
                {
                    b.Property<int>("Address_Type_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Address_Type_Id"));

                    b.Property<string>("Address_Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.HasKey("Address_Type_Id");

                    b.ToTable("Type_of_Addresses");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.CompanyCode", b =>
                {
                    b.Property<string>("Company_Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.HasKey("Company_Code");

                    b.ToTable("Company_Codes");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.CompanyStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Company_Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Company_Statuses");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.ContactType", b =>
                {
                    b.Property<int>("Contact_Type_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Contact_Type_Id"));

                    b.Property<string>("Contact_Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.HasKey("Contact_Type_Id");

                    b.ToTable("Type_of_Contacts");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Country");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.Department", b =>
                {
                    b.Property<int>("Department_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Department_Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.HasKey("Department_Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.FormStatus", b =>
                {
                    b.Property<int>("Status_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Status_Id"));

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Status_Id");

                    b.ToTable("Form_Statuses");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.GSTVenClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("GSTVenClass");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.Incoterms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Incoterms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.Industry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Industry");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.OrganizationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Type_of_Organization")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Organization_Types");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.PurchaseOrganization", b =>
                {
                    b.Property<string>("PO_Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.HasKey("PO_Code");

                    b.ToTable("Purchase_Organizations");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.ReconciliationAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ReconciliationAccounts");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Country_Code")
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Country_Code");

                    b.ToTable("Region");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.Role", b =>
                {
                    b.Property<int>("Role_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Role_Id"));

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Role_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Role_Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.SchemaGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("SchemaGroups");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.TankerType", b =>
                {
                    b.Property<int>("Tanker_Type_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Tanker_Type_Id"));

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Tanker_Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Tanker_Type_Id");

                    b.ToTable("Type_of_Tankers");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.TaxBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Percent")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("TaxBases");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employee_Id")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<string>("Last_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Middle_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile_No")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reporting_Manager_EmpId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Employee_Id")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.VendorAccountGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("VendorAccountGroups");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.VendorType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Vendor_Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Type_of_Vendors");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Attachments.Attachment", b =>
                {
                    b.Property<int>("Attachment_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Attachment_Id"));

                    b.Property<DateTime?>("Expiry_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("File_Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("File_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("File_Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("File_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Is_Expiry_Available")
                        .HasColumnType("bit");

                    b.HasKey("Attachment_Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.AdditionalFields", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountGroup_Id")
                        .HasColumnType("int");

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<string>("GrBased")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Incoterms_Id")
                        .HasColumnType("int");

                    b.Property<int>("Industry_Id")
                        .HasColumnType("int");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Order_Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PO_Code")
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Reconciliation_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Schema_Id")
                        .HasColumnType("int");

                    b.Property<string>("Search_Term")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SrvBased")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountGroup_Id");

                    b.HasIndex("Form_Id");

                    b.HasIndex("Incoterms_Id");

                    b.HasIndex("Industry_Id");

                    b.HasIndex("PO_Code");

                    b.HasIndex("Reconciliation_Id");

                    b.HasIndex("Schema_Id");

                    b.ToTable("AdditionalFields");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.Address", b =>
                {
                    b.Property<int>("Address_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Address_Id"));

                    b.Property<int>("Address_Type_Id")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("Country_Code")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("District")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("Fax")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)");

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<string>("House_No")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("Postal_Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Region_Id")
                        .HasColumnType("int");

                    b.Property<string>("Street_2")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Street_3")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Street_4")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Tel")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Website")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Address_Id");

                    b.HasIndex("Address_Type_Id");

                    b.HasIndex("Country_Code");

                    b.HasIndex("Form_Id");

                    b.HasIndex("Region_Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.AnnualTurnOver", b =>
                {
                    b.Property<int>("TurnOver_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TurnOver_Id"));

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<long>("NetProfit")
                        .HasColumnType("bigint");

                    b.Property<long>("OperatingProfit")
                        .HasColumnType("bigint");

                    b.Property<long>("SalesTurnOver")
                        .HasColumnType("bigint");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("TurnOver_Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("Annual_TurnOver");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.Bank_Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountHolder")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Account_Number")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bank")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Branch")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<string>("IBAN")
                        .HasMaxLength(34)
                        .HasColumnType("nvarchar(34)");

                    b.Property<string>("IFSC")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("SWIFT")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("Bank_Details");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.CommercialProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Agency_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Financial_Credit_Rating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<string>("GSTIN")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("Is_MSME_Type")
                        .HasColumnType("bit");

                    b.Property<string>("MSME_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MSME_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAN")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ServiceCategory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("Commercial_Profile");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.Contact", b =>
                {
                    b.Property<int>("Contact_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Contact_Id"));

                    b.Property<int>("Contact_Type_Id")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<string>("Mobile_Number")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_Number")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Contact_Id");

                    b.HasIndex("Contact_Type_Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.MajorCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Customer_Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("MajorCustomers");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.NocilRelatedEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Employee_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<string>("Type_Of_Relation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("NocilRelatedEmployees");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.ProprietorOrPartner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PercentageShare")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("Proprietor_or_Partners");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.Subsideries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<string>("Subsidery_Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("Subsideries");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.TechnicalProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<string>("Initiatives_for_Development")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_ISO_Certified")
                        .HasColumnType("bit");

                    b.Property<bool>("Is_Statutory_Provisions_Adheard")
                        .HasColumnType("bit");

                    b.Property<bool>("Other_Qms_Certified")
                        .HasColumnType("bit");

                    b.Property<bool>("Planning_for_Qms")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("Technical_Profile");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.VendorBranch", b =>
                {
                    b.Property<int>("Branch_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Branch_Id"));

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile_No")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Branch_Id");

                    b.HasIndex("Form_Id");

                    b.ToTable("VendorBranches");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Domestic.VendorOrganizationProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Annual_Prod_Capacity")
                        .HasColumnType("real");

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<bool>("RelationToNocil")
                        .HasColumnType("bit");

                    b.Property<int>("Status_of_Company_Id")
                        .HasColumnType("int");

                    b.Property<int>("Type_of_Org_Id")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Form_Id");

                    b.HasIndex("Status_of_Company_Id");

                    b.HasIndex("Type_of_Org_Id");

                    b.ToTable("Vendor_Organization_Profile");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Domestic.VendorPersonalData", b =>
                {
                    b.Property<int>("Personal_Info_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Personal_Info_Id"));

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<int?>("GSTVenClass_Id")
                        .HasColumnType("int");

                    b.Property<string>("Organization_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Plant_Installation_Year")
                        .HasColumnType("int");

                    b.Property<int>("Title_Id")
                        .HasColumnType("int");

                    b.HasKey("Personal_Info_Id");

                    b.HasIndex("Form_Id");

                    b.HasIndex("GSTVenClass_Id");

                    b.HasIndex("Title_Id");

                    b.ToTable("Vendor_Personal_Data");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Evaluation.VendorGrade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeId"));

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<float>("Grade")
                        .HasColumnType("real");

                    b.Property<DateTime>("Last_Audit_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Audited_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor_Code")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradeId");

                    b.HasIndex("FormId");

                    b.ToTable("VendorGrades");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Form", b =>
                {
                    b.Property<int>("Form_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Form_Id"));

                    b.Property<string>("Company_Code")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Created_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("Department_Id")
                        .HasColumnType("int");

                    b.Property<int>("Status_Id")
                        .HasColumnType("int");

                    b.Property<string>("Vendor_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor_Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor_Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vendor_Type_Id")
                        .HasColumnType("int");

                    b.HasKey("Form_Id");

                    b.HasIndex("Company_Code");

                    b.HasIndex("Department_Id");

                    b.HasIndex("Status_Id");

                    b.HasIndex("Vendor_Type_Id");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Transport.TankerDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Capacity_of_Tanker")
                        .HasColumnType("real");

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsGPSRegistered")
                        .HasColumnType("bit");

                    b.Property<int>("Tanker_Type_Id")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Form_Id");

                    b.HasIndex("Tanker_Type_Id");

                    b.ToTable("Tanker_Details");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Transport.TransportVendorPersonalData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<int?>("GSTVenClass_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name_of_Transporter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Nicerglobe_Registration_Status")
                        .HasColumnType("bit");

                    b.Property<int>("No_of_Drivers")
                        .HasColumnType("int");

                    b.Property<int>("No_of_Own_Vehicles")
                        .HasColumnType("int");

                    b.Property<int>("Title_Id")
                        .HasColumnType("int");

                    b.Property<int>("Year_of_Establishment")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Form_Id");

                    b.HasIndex("GSTVenClass_Id");

                    b.HasIndex("Title_Id");

                    b.ToTable("Transport_Vendor_Personal_Data");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Transport.VehicleDetails", b =>
                {
                    b.Property<int>("VehicleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleTypeId"));

                    b.Property<float>("Capacity")
                        .HasColumnType("real");

                    b.Property<int>("Form_Id")
                        .HasColumnType("int");

                    b.Property<string>("Vehicle_Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleTypeId");

                    b.HasIndex("Form_Id");

                    b.ToTable("Vehicle_Details");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Approval.Tasks", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.User", "User")
                        .WithMany()
                        .HasForeignKey("Owner_Id")
                        .HasPrincipalKey("Employee_Id");

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.Role", "Role")
                        .WithMany()
                        .HasForeignKey("Role_Id");

                    b.Navigation("Forms");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Approval.WorkFlow", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.Role", "Roles")
                        .WithMany()
                        .HasForeignKey("Role_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.VendorType", "VendorTypes")
                        .WithMany()
                        .HasForeignKey("Vendor_Type_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");

                    b.Navigation("VendorTypes");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Auth.ForgotPasswordOtpTransaction", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.User", "User")
                        .WithMany()
                        .HasForeignKey("Employee_Id")
                        .HasPrincipalKey("Employee_Id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Auth.OtpTransaction", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Logs.EditRequestHistory", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Logs.TransactionHistory", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Master.Region", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.Country", "Country")
                        .WithMany()
                        .HasForeignKey("Country_Code")
                        .HasPrincipalKey("Code");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Attachments.Attachment", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.AdditionalFields", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.VendorAccountGroup", "VendorAccountGroup")
                        .WithMany()
                        .HasForeignKey("AccountGroup_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.Incoterms", "Incoterms")
                        .WithMany()
                        .HasForeignKey("Incoterms_Id");

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.Industry", "Industry")
                        .WithMany()
                        .HasForeignKey("Industry_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.PurchaseOrganization", "PurchaseOrganization")
                        .WithMany()
                        .HasForeignKey("PO_Code");

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.ReconciliationAccount", "ReconciliationAccount")
                        .WithMany()
                        .HasForeignKey("Reconciliation_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.SchemaGroup", "SchemaGroup")
                        .WithMany()
                        .HasForeignKey("Schema_Id");

                    b.Navigation("Forms");

                    b.Navigation("Incoterms");

                    b.Navigation("Industry");

                    b.Navigation("PurchaseOrganization");

                    b.Navigation("ReconciliationAccount");

                    b.Navigation("SchemaGroup");

                    b.Navigation("VendorAccountGroup");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.Address", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.AddressType", "AddressTypes")
                        .WithMany()
                        .HasForeignKey("Address_Type_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.Country", "Country")
                        .WithMany()
                        .HasForeignKey("Country_Code")
                        .HasPrincipalKey("Code");

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.Region", "Region")
                        .WithMany()
                        .HasForeignKey("Region_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddressTypes");

                    b.Navigation("Country");

                    b.Navigation("Forms");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.AnnualTurnOver", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.Bank_Detail", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.CommercialProfile", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.Contact", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.ContactType", "ContactTypes")
                        .WithMany()
                        .HasForeignKey("Contact_Type_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContactTypes");

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.MajorCustomer", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.NocilRelatedEmployee", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Form")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.ProprietorOrPartner", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.Subsideries", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.TechnicalProfile", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.CommonData.VendorBranch", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Domestic.VendorOrganizationProfile", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.CompanyStatus", "CompanyStatus")
                        .WithMany()
                        .HasForeignKey("Status_of_Company_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.OrganizationType", "OrganizationTypes")
                        .WithMany()
                        .HasForeignKey("Type_of_Org_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyStatus");

                    b.Navigation("Forms");

                    b.Navigation("OrganizationTypes");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Domestic.VendorPersonalData", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.GSTVenClass", "GSTVenClass")
                        .WithMany()
                        .HasForeignKey("GSTVenClass_Id");

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.Title", "Title")
                        .WithMany()
                        .HasForeignKey("Title_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");

                    b.Navigation("GSTVenClass");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Evaluation.VendorGrade", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Form", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.CompanyCode", "CompanyCode")
                        .WithMany()
                        .HasForeignKey("Company_Code");

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.Department", "DepartmentVirtual")
                        .WithMany()
                        .HasForeignKey("Department_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.FormStatus", "FormStatus")
                        .WithMany()
                        .HasForeignKey("Status_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.VendorType", "VendorType")
                        .WithMany()
                        .HasForeignKey("Vendor_Type_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyCode");

                    b.Navigation("DepartmentVirtual");

                    b.Navigation("FormStatus");

                    b.Navigation("VendorType");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Transport.TankerDetail", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.TankerType", "TankerTypes")
                        .WithMany()
                        .HasForeignKey("Tanker_Type_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");

                    b.Navigation("TankerTypes");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Transport.TransportVendorPersonalData", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.GSTVenClass", "GSTVenClass")
                        .WithMany()
                        .HasForeignKey("GSTVenClass_Id");

                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Master.Title", "Title")
                        .WithMany()
                        .HasForeignKey("Title_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");

                    b.Navigation("GSTVenClass");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("NOCIL_VP.Domain.Core.Entities.Registration.Transport.VehicleDetails", b =>
                {
                    b.HasOne("NOCIL_VP.Domain.Core.Entities.Registration.Form", "Forms")
                        .WithMany()
                        .HasForeignKey("Form_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forms");
                });
#pragma warning restore 612, 618
        }
    }
}
